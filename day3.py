#字符串基本操作：所有标准序列操作（索引、切片、乘法、成员资格检查、长度、最小值和最大值）
#字符串是不可变的，所以所有的元素赋值和切片赋值都是非法的。
#设置字符串的格式：以前，主要的解决方案是使用字符串格式设置运算符——百分号。
#在%左边指定一个字符串（格式字符串），并在右边指定要设置其格式的值。指定要设置其格式的值时，可使用单个值（如字符串或数字），可使用元组（如果要设置多个值的格式），还可以使用字典，最常见的是元组。
#%s称为转换说明符，指出了要将值插入什么地方，s意味着将值视为字符串进行格式设置。如果指定的值不是字符串，将使用str将其转换成字符串。其他说明符将导致其他形式的转换。
#另一种方案是模板字符串，旨在简化基本的格式设置机制。包括等号的参数称为关键字参数。在字符串格式设置中，可将关键字参数视为一种向命名替换字段提供值的方式。
#字符串方法format，融合了早期方法的优点。使用这种方法时，每个替换字段都用花括号括起来，其中可能包括名称，还可能包括有关如何对相应的值进行转换和格式设置的信息。在最简单的情况下，替换字段没有名称或将索引用作名称。
#format方法中索引无需按顺序排列，关键字参数的排列顺序无关紧要。格式说明符和字段名用:隔开。
#如果替换字段和变量同名，可以用f字符串简写。
#string模块还是很有用的，有一些字符串方法没有的常量和函数。
#字符串方法：center,find,join,lower,replace,split,strip,translate以及判断字符串是否满足特定条件（很多字符串方法都以is开头，如isspace,isdigit和isupper,它们判断字符串是否具有特定的性质（如包含的字符全为空白、数字或大写）。如果字符串具备特定的性质，这些方法就返回True，否则就返回False）。
#center方法,通过在两边添加填充字符（默认为空格）让字符串居中。
#find方法：在字符串中查找子串。如果找到，就返回子串的第一个字符的索引，否则返回-1。
#join方法：与splitd作用相反，用于合并序列的元素。合并的序列元素必须都是字符串。
#lower方法：返回字符串的小写版本。词首大写：title方法、模块string中的函数capwords、要实现真正的词首大写还是需要自己编写代码。
#replace方法：将指定的字符串替换成另一个字符串，并返回替换后的结果。
#split方法：作用和join相反，将字符串拆分为序列。如果没有指定分隔符，将默认在单个或多个连续的空白字符（空格、制表符、换行符等）处进行拆分。
#strip方法：将字符串末尾和开头的空白删除（但不包括中间的空白），并返回删除后的结果。可以加参数，指定删除哪些字符。
#translate方法：替换字符。和replace一样，但是replace只能进行单个字符的替换。使用前必须创建一个转换表。可以调用maketrans方法创建转换表。maketrans方法第三个参数是要删除的。
#小结：字符串格式设置、字符串方法。
#今日编程题：给出一个32位的有符号的整数。你需要将这个整数中每位上的数字进行反转。
#注意：假设我们的环境只能储存得下32位的有符号整数，则其数值范围为[-2^31,2^31-1]。请根据这个假设，如果反转后整数溢出那么就返回0。




