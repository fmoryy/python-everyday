#需要将一系列值组合成数据结构并通过编号来访问各个值时，列表很有用。
#还有一种可通过名称来访问其各个值的数据结构。这个数据结构称为映射。字典是唯一一个内置的映射类型，其值不按顺序排列，而是存储在键下。键可能是数，字符串或元组。
#字典的创建和使用：由键和值组成，这种键值对称为项。每个键值对中间用:隔开，整个字典放在花括号中。空字典没有任何项，用两个花括号表示。
#在字典中，键必须是独一无二的，但是值无所谓。
#dict类：从其他映射（其他字典）中或键值对序列创建字典。可以输入关键字实参调用。
#字典的基本行为在很多方面类似序列。
#len[d]返回字典d包含的项（键值对）数、d[k]返回与键k相关联的值、d[k]=v将值v关联到键k、del d[k]删除键为k的项、k in d检查字典d是否包含键为k的项。
#字典中的键可以使任何不可变的类型。
#自动添加：即便是字典中原本没有的键，也可以给它赋值，这将在字典中创建一个新项。然而不使用append或其他类似的方法，就不能给列表中没有的元素赋值。
#成员资格：表达式k in d（其中d是一个字典），查找的是一个键不是一个值。表达式v in l（其中l是一个列表）查找的是值而不是索引。
#提示：检查字典中是否包含指定的键效率比检查列表中是否包含指定的值更高。数据结构越大，效率差距越明显。
#format_map方法可以指出通过一个映射来提供所需的信息。
#字典方法：clear（清空所有项，就地执行返回None）、copy（返回一个新字典，其包含键值对与原来的字典相同，这个方法执行的是浅复制，因为只是原件，不是副本）、fromkeys（创建一个新字典，其中包含指定的键，且每个键对应的值都是None）、get方法（访问字典，通常如果尝试访问没有的项，将引发错误，但是get方法不会，get可以通过第二个参数设置默认值）、item
