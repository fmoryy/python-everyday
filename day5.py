#print语句、import语句、赋值语句
#print语句可以打印多个参数，打印一个参数的时候，要么这个表达式是字符串，要么将自动转换成字符串。
#print语句打印多个参数的时候，用逗号分隔开，默认分隔符为空格，可以自定义分隔符和结束字符串。
#import语句可以使用as子句指定别名。
#赋值语句可以给变量赋值、可以给数据结构的一部分赋值、可以给字典赋值还可以给其他类型赋值。
#可以同时（并行）给多个变量赋值。
#序列解包（或可迭代对象解包）：将一个序列（或任意可迭代对象）解包，并将得到的值存储到一系列的变量中。
#要解包的序列包含的元素个数必须与等号左边列出的目标个数相同，否则将发生异常。可使用*运算符来收集多余的值，这样就无须确保值和变量的个数相同。赋值语句的右边可以是任意类型的序列，但是带星号的变量最终包含的总是一个列表。
#链式赋值：用于将多个变量关联到同一个值。
#增强赋值：可将等号右边的运算符移到赋值运算符的前面。
#代码块：不是一种语句，是一组语句，可在满足条件是执行（if语句），可执行多次（循环），等等。代码块是通过缩进代码（即在前面加空格）来创建。
#在同一代码块中，各行代码的缩进两必须相同。在很多语言中，都使用一个特殊的单词或字符（如begin或{）来标识代码块的的其去起始位置，并使用另一个特殊的单词或字符（如end或}）来标识结束位置。
#在python中，使用:指出接下来的是一个代码块，并将该代码块中的每行代码都缩进相同的程度。
#条件或条件语句：用作布尔表达式（如用作if语句中的条件）时，下面的值都将被解释器视为假：False None 0 "" () [] {}
#标准值False和None、各个类型（包括浮点数、复数等）的数值0、空序列（如空字符串、空元组和空列表）以及空映射（如空字典）都被视为假。而其他值都视为真，包括特殊值True。
#有条件的执行和if语句：如果条件（if和冒号中间的表达式）为真就执行后续代码块，如果条件为假，就不执行。
#else子句是if语句的一部分，提供另一种选择。
#条件表达式 if else
#elif检查多个条件
#更复杂的运算符：比较运算符（和赋值一样，支持链式比较）、相同运算符（检查两个对象是否相同，不是相等，一般不用于不可变动的基本值）、成员资格检查运算符in
#字符串和序列的比较：字符串是根据字符的字母顺序进行比较的。字母都是Unicode字符，他们都是按码点排列的。可使用ord函数获取字母的顺序值，与chr函数的作用相反。
#布尔运算符：and和or。短路逻辑
#关键字：assert检查条件是否满足特定条件，可以在后面加一个断言说明。
#循环：
